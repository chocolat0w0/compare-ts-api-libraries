/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/mushrooms/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** きのこ情報の一覧を取得する。 */
        get: {
            parameters: {
                query?: {
                    limit?: components["parameters"]["PaginationLimit"];
                    offset?: components["parameters"]["PaginationOffset"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 正常終了 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            results: components["schemas"]["Mushroom"][];
                        } & components["schemas"]["PaginationParts"];
                    };
                };
            };
        };
        put?: never;
        /** きのこを登録する。 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["Mushroom"];
                };
            };
            responses: {
                /** @description 正常に作成 */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Mushroom"];
                    };
                };
                /** @description 登録できない */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Http422UnprocessableEntity"] | components["schemas"]["Http422InvalidRequestBody"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mushrooms/{mushroom_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** きのこの情報を取得する。 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description きのこID */
                    mushroom_id: components["parameters"]["MushroomID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 正常に取得 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            results: components["schemas"]["Mushroom"][];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Http422UnprocessableEntity: {
            /** @example 処理できませんでした */
            detail?: string;
            /** @example unprocessable_entity */
            code?: string;
        };
        Http422InvalidRequestBody: {
            "*"?: string[];
            code?: {
                "*"?: string[];
            };
        };
        PaginationParts: {
            /**
             * @description 総数
             * @example 100
             */
            count: number;
            /**
             * Format: uri
             * @description 次のページへのURL
             * @example https://api.example.com/?limit=100&offset=500
             */
            next: string | null;
            /**
             * Format: uri
             * @description 前のページへのURL
             * @example https://api.example.com/?limit=100&offset=300
             */
            previous: string | null;
        };
        Mushroom: {
            /**
             * Format: uuid
             * @description きのこID
             */
            readonly id: string;
            /**
             * @description きのこ名
             * @example しめじ
             */
            name: string;
            /**
             * @description きのこの概要
             * @example きのこの概要
             */
            description: string;
            /** @description 購入可能か */
            orderable: boolean;
            /**
             * @description 大きさの種類
             * @enum {string}
             */
            size: "small" | "medium" | "large";
            /**
             * @description おいしさスコア
             * @example 90
             */
            tastiness?: number | null;
            /**
             * @description 状態
             * @example {
             *       "color": "red",
             *       "height": 50
             *     }
             */
            conditions?: {
                [key: string]: string | number;
            };
        };
    };
    responses: never;
    parameters: {
        PaginationLimit: number;
        PaginationOffset: number;
        /** @description きのこID */
        MushroomID: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
